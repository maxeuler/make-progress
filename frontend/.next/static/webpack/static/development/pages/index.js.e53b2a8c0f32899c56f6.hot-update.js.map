{"version":3,"file":"static/webpack/static/development/pages/index.js.e53b2a8c0f32899c56f6.hot-update.js","sources":["webpack:///./components/ProgressForm.js"],"sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  width: 90%;\n  background: #fff;\n  border: 1px solid #ddd;\n  justify-content: space-evenly;\n  align-items: center;\n  padding: 2rem;\n  border-radius: 3px;\n  margin: 1rem 0;\n  label {\n    padding: 0 1rem;\n    width: 80%;\n    font-size: 1.4rem;\n    color: ${props => props.theme.primary};\n    input {\n      display: block;\n      margin: 0.5rem 0;\n      padding: 0.25rem;\n      width: 90%;\n      line-height: 2;\n      border: 1px solid #ddd;\n      border-radius: 2px;\n      font-size: 1.5rem;\n      outline: none;\n    }\n  }\n  #units {\n    width: 60px;\n  }\n  button {\n    width: 6rem;\n    background: none;\n    border: 0;\n    color: ${props => props.theme.primary};\n    font-size: 2rem;\n    cursor: pointer;\n    margin-right: 2rem;\n  }\n`;\n\nclass ProgressForm extends Component {\n  state = {\n    units: 0,\n    description: '',\n  };\n\n  handleChange = e => {\n    const { name, type, value } = e.target;\n    const val = type === 'number' ? parseFloat(value) : value;\n    this.setState({\n      [name]: val,\n    });\n  };\n\n  render() {\n    const { task } = this.props;\n    return (\n      <Form\n        method=\"POST\"\n        onSubmit={e => {\n          e.preventDefault();\n          const { units, description } = this.state;\n          // if number field was empty units is NaN\n          // we set it to 0\n          const validUnits = units || 0;\n          this.props.addProgress(validUnits, description);\n        }}\n      >\n        <label htmlFor=\"units\">\n          Units\n          <input\n            name=\"units\"\n            type=\"number\"\n            onChange={this.handleChange}\n            value={this.state.units}\n            min={0 - task.finishedUnits}\n            max={task.units - task.finishedUnits}\n          />\n        </label>\n        <label htmlFor=\"description\">\n          Description\n          <input\n            type=\"text\"\n            name=\"description\"\n            onChange={this.handleChange}\n            value={this.state.description}\n          />\n        </label>\n        <button type=\"submit\">ADD</button>\n      </Form>\n    );\n  }\n}\n\nexport default ProgressForm;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAcA;AAAA;AAoBA;AAAA;AACA;AAMA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;;;;;;AACA;AAAA;AACA;AADA;AAEA;AAEA;AACA;AACA;AADA;AAAA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAnDA;AACA;AAqDA;;;;A","sourceRoot":""}